import pygame
pygame.init()

win = pygame.display.set_mode((700,500))
pygame.display.set_caption("Naruto vs Sasuke")

# Corrected walkright and walkleft lists
walkright = [
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NR2.png"),
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NR3.png"),
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NR1.png")
]

walkleft = [
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NL2.png"),
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NL3.png"),
    pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NL1.png")
]

bg = pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\bg.png")
bg = pygame.transform.scale(bg, (800, 600))  # Scale the background to fit the window 
stan = pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\Nstanding.png")

Nh = pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\Nh.png")
Sh = pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\Sh.png")

hitSound = pygame.mixer.Sound("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\pics_hit.wav")
bgm = pygame.mixer.music.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\shuriken.wav")

pygame.mixer.music.play()

Clock = pygame.time.Clock()

class player():
    def __init__(self, x, y, width, height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.speed = 10
        self.isjump = False
        self.jumpheight = 10
        self.left = False
        self.right = False
        self.walkCount = 0
        self.standing = True
        self.hitbox = (self.x + 10, self.y + 5, 80, 80)
        self.health = 200

    def draw(self, win):
        if self.health > 0:
            if self.walkCount + 1 >= 6:
                self.walkCount = 0
            if not self.standing:
                if self.left:
                    win.blit(walkleft[self.walkCount // 2], (self.x, self.y))
                    self.walkCount += 1
                elif self.right:
                    win.blit(walkright[self.walkCount // 2], (self.x, self.y))
                    self.walkCount += 1
            else:
                if self.right:
                    win.blit(pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NR1.png"), (self.x, self.y))
                else:
                    win.blit(pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\NL1.png"), (self.x, self.y))

            self.hitbox = (self.x + 10, self.y + 5, 80, 80)
            Nbar2 = pygame.draw.rect(win, (255, 0, 0), (80, 40, 210, 25))
            Nbar = pygame.draw.rect(win, (255, 255, 0), (80, 45, self.health, 15))
        else:
            text = font.render('Sasuke Wins', True, (255, 255, 255), (0, 0, 100))
            win.blit(text, (180, 200))
            win.blit(pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\Nd.png"), (self.x, self.y))

    def hit(self):
        if self.health > 0:
            self.health -= 5
        else:
            print("Naruto died")

class weapons():
    def __init__(self, x, y, width, height, facing):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.facing = facing
        self.vel = 8 * facing
        self.hitbox = (self.x, self.y, 40, 40)

    def draw(self, win):
        win.blit(pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\shur.png"), (self.x, self.y))
        self.hitbox = (self.x, self.y, 40, 40)

class enemy():
    walkRightS = [
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SR2.png"),
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SR3.png"),
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SR1.png")
    ]
    walkLeftS = [
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SL2.png"),
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SL3.png"),
        pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\SL1.png")
    ]

    def __init__(self, x, y, width, height, end):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.end = end
        self.path = [self.x, self.end]
        self.speed = 8
        self.walkCount = 0
        self.hitbox = (self.x + 10, self.y + 5, 80, 80)
        self.health = 200

    def draw(self, win):
        self.move()
        if self.health > 0:
            if self.walkCount + 1 >= 6:
                self.walkCount = 0
            if self.speed > 0:
                win.blit(self.walkRightS[self.walkCount // 2], (self.x, self.y))
                self.walkCount += 1
            else:
                win.blit(self.walkLeftS[self.walkCount // 2], (self.x, self.y))
                self.walkCount += 1

            self.hitbox = (self.x + 10, self.y + 5, 80, 80)
            Sbar2 = pygame.draw.rect(win, (255, 0, 0), (410, 40, 210, 25))
            Sbar = pygame.draw.rect(win, (255, 255, 0), (620, 45, -self.health, 15))
        else:
            self.speed = 0
            text = font.render('Naruto Wins', True, (255, 100, 10), (0, 0, 100))
            win.blit(text, (180, 200))
            win.blit(pygame.image.load("C:\\Users\\Martin\\Desktop\\Pygame_Tutorials_Code\\Image\\Sd.png"), (self.x, self.y))

    def move(self):
        if self.speed > 0:
            if self.x + self.speed < self.path[1]:
                self.x += self.speed
            else:
                self.speed = self.speed * -1
                self.walkCount = 0
        else:
            if self.x - self.speed > self.path[0]:
                self.x += self.speed
            else:
                self.speed = self.speed * -1
                self.walkCount = 0

    def hit(self):
        if self.health > 0:
            self.health -= 10
        else:
            print('sasuke died')

run = True

def redrawgamewindow():
    win.blit(bg, (0, 0))
    naruto.draw(win)
    sasuke.draw(win)
    win.blit(Nh, (10, 10))
    win.blit(Sh, (600, 10))

    for shuriken in shurikens:
        shuriken.draw(win)

    pygame.display.update()

font = pygame.font.SysFont('comicsans', 60, True)

naruto = player(30, 400, 100, 100)
sasuke = enemy(100, 400, 100, 100, 600)
shurikens = []
throwSpeed = 0

while run:
    Clock.tick(25)
    if throwSpeed > 0:
        throwSpeed += 1
    if throwSpeed > 3:
        throwSpeed = 0

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    if naruto.health > 0 and sasuke.health > 0:
        for shuriken in shurikens:
            if shuriken.x < 700 and shuriken.x > 0:
                shuriken.x += shuriken.vel
            else:
                shurikens.pop(shurikens.index(shuriken))

            if shuriken.hitbox[1] < sasuke.hitbox[1] + sasuke.hitbox[3] and shuriken.hitbox[1] + shuriken.hitbox[3] > sasuke.hitbox[1]:
                if shuriken.hitbox[0] + shuriken.hitbox[2] > sasuke.hitbox[0] and shuriken.hitbox[0] < sasuke.hitbox[0] + sasuke.hitbox[2]:
                    sasuke.hit()
                    hitSound.play()
                    shurikens.pop(shurikens.index(shuriken))

    keys = pygame.key.get_pressed()

    if keys[pygame.K_SPACE] and throwSpeed == 0:
        if naruto.left:
            facing = -1
        else:
            facing = 1

        if len(shurikens) < 5:
            shurikens.append(weapons(round(naruto.x + naruto.width // 2), round(naruto.y + naruto.height // 2), 40, 40, facing))

        throwSpeed = 1

    if keys[pygame.K_LEFT] and naruto.x > naruto.speed:
        naruto.x -= naruto.speed
        naruto.left = True
        naruto.right = False
        naruto.standing = False
    elif keys[pygame.K_RIGHT] and naruto.x < 600 - naruto.speed - naruto.width:
        naruto.x += naruto.speed
        naruto.left = False
        naruto.right = True
        naruto.standing = False
    else:
        naruto.standing = True
        naruto.walkCount = 0

    if not naruto.isjump:
        if keys[pygame.K_UP]:
            naruto.isjump = True
            naruto.left = False
            naruto.right = False
            naruto.walkCount = 0
    else:
        if naruto.jumpheight >= -10:
            neg = 1
            if naruto.jumpheight < 0:
                neg = -1
            naruto.y -= (naruto.jumpheight ** 2) * 0.5 * neg
            naruto.jumpheight -= 1
        else:
            naruto.isjump = False
            naruto.jumpheight = 10

    redrawgamewindow()

pygame.quit()
